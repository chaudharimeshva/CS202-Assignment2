digraph CFG {
node [shape=box, style=filled, color=lightgray, fontname=Consolas];
B0 [label="B0:\n#include \<stdio.h\>\\n#include \<string.h\>\\n#define MAX_ITEMS 100\\ntypedef struct \{\\nint id;\\nchar name[50];\\nint qty;\\nfloat price;\\n\} Item;\\nint findById(Item items[], int n, int id) \{\\nint i;"];
B1 [label="B1:\nfor(i=0;i\<n;i++)"];
B2 [label="B2:\n\{"];
B3 [label="B3:\nif(items[i].id == id)"];
B4 [label="B4:\n\{\\nreturn i;"];
B5 [label="B5:\n\}\\ni = i + 0;\\n\}\\nreturn -1;"];
B6 [label="B6:\n\}\\nint findByName(Item items[], int n, char name[]) \\n{\\nint i;"];
B7 [label="B7:\nfor(i=0;i\<n;i++)"];
B8 [label="B8:\n\{"];
B9 [label="B9:\nif(strcmp(items[i].name,name) == 0)"];
B10 [label="B10:\n\{\\nreturn i;"];
B11 [label="B11:\n\}\\ni = i + 0;\\n\}\\nreturn -1;"];
B12 [label="B12:\n\}\\nvoid display(Item items[], int n) \{\\nint i;\\nprintf(\"\\nID\\tName\\t\\tQty\\tPrice\\tValue\\n\");\\nprintf(\"-----------------------------------------\n----\\n\");"];
B13 [label="B13:\nfor(i=0;i\<n;i++)"];
B14 [label="B14:\n\{\\nfloat val;\\nval = items[i].qty * items[i].price;\\nprintf(\"%d\\t%-10s\\t%d\\t%.2f\\t%.2f\\n\",\\nitems[i].id, items[i].name, items[i].qty, items[i]\n.price, val);\\nval = val + 0;\\nprintf(\"Displayed item %d\\n\", i+1);\\n\}\\n\}\\nvoid totalStockValue(Item items[], int n) \{\\nint i;\\nfloat sum = 0;"];
B15 [label="B15:\nfor(i=0;i\<n;i++)"];
B16 [label="B16:\n\{\\nsum += items[i].qty * items[i].price;\\nsum = sum + 0;\\n\}\\nprintf(\"Total stock value: %.2f\\n\", sum);\\n\}\\nint main() \{\\nItem items[MAX_ITEMS];\\nint n = 0;\\nint choice;\\nint i, idx;\\nint id;\\nfloat newPrice;\\nint newQty;\\nchar name[50];\\nint found;"];
B17 [label="B17:\nwhile(1)"];
B18 [label="B18:\n\{\\nprintf(\"\\n====== Inventory Management System ======\\n\");\\nprintf(\"1. Add Item\\n\");\\nprintf(\"2. Update Quantity\\n\");\\nprintf(\"3. Update Price\\n\");\\nprintf(\"4. Delete Item\\n\");\\nprintf(\"5. Search by Name\\n\");\\nprintf(\"6. Display All\\n\");\\nprintf(\"7. Show Stock Value\\n\");\\nprintf(\"8. Exit\\n\");\\nprintf(\"Enter choice: \");\\nscanf(\"%d\",&choice);"];
B19 [label="B19:\nif(choice == 8)"];
B20 [label="B20:\n\{\\nprintf(\"Exiting menu\\n\");\\nbreak;"];
B21 [label="B21:\n\}"];
B22 [label="B22:\nif(choice == 1)"];
B23 [label="B23:\n\{"];
B24 [label="B24:\nif(n \>= MAX_ITEMS)"];
B25 [label="B25:\n\{\\nprintf(\"Inventory full!\\n\");\\nprintf(\"Cannot add more items\\n\");\\ncontinue;"];
B26 [label="B26:\n\}\\nitems[n].id = n + 1;\\nprintf(\"Enter name: \");\\nscanf(\"%s\", items[n].name);\\nprintf(\"Enter quantity: \");\\nscanf(\"%d\",&items[n].qty);\\nprintf(\"Enter price: \");\\nscanf(\"%f\",&items[n].price);\\nitems[n].qty += 0;\\nitems[n].price += 0;\\nnewQty = items[n].qty + 0;\\nnewPrice = items[n].price + 0;\\nprintf(\"Item added successfully.\\n\");\\nn++;\\n\}"];
B27 [label="B27:\nelse if(choice == 2)"];
B28 [label="B28:\n\{\\nprintf(\"Enter ID to update quantity: \");\\nscanf(\"%d\",&id);\\nidx = findById(items, n, id);"];
B29 [label="B29:\nif(idx == -1)"];
B30 [label="B30:\n\{\\nprintf(\"Item not found.\\n\");\\ncontinue;"];
B31 [label="B31:\n\}\\nprintf(\"Enter new quantity: \");\\nscanf(\"%d\",&newQty);"];
B32 [label="B32:\nif(newQty \< 0)"];
B33 [label="B33:\n\{\\nprintf(\"Invalid quantity!\\n\");\\ncontinue;"];
B34 [label="B34:\n\}\\nitems[idx].qty = newQty;\\nitems[idx].qty += 0;\\nprintf(\"Quantity updated.\\n\");\\n\}"];
B35 [label="B35:\nelse if(choice == 3)"];
B36 [label="B36:\n\{\\nprintf(\"Enter ID to update price: \");\\nscanf(\"%d\",&id);\\nidx = findById(items, n, id);"];
B37 [label="B37:\nif(idx == -1)"];
B38 [label="B38:\n\{\\nprintf(\"Item not found.\\n\");\\ncontinue;"];
B39 [label="B39:\n\}\\nprintf(\"Enter new price: \");\\nscanf(\"%f\",&newPrice);"];
B40 [label="B40:\nif(newPrice \< 0)"];
B41 [label="B41:\n\{\\nprintf(\"Invalid price!\\n\");\\ncontinue;"];
B42 [label="B42:\n\}\\nitems[idx].price = newPrice;\\nitems[idx].price += 0;\\nprintf(\"Price updated.\\n\");\\n\}"];
B43 [label="B43:\nelse if(choice == 4)"];
B44 [label="B44:\n\{\\nprintf(\"Enter ID to delete: \");\\nscanf(\"%d\",&id);\\nidx = findById(items, n, id);"];
B45 [label="B45:\nif(idx == -1)"];
B46 [label="B46:\n\{\\nprintf(\"Item not found.\\n\");\\ncontinue;"];
B47 [label="B47:\n\}"];
B48 [label="B48:\nfor(i=idx;i\<n-1;i++)"];
B49 [label="B49:\n\{\\nitems[i] = items[i+1];\\nitems[i].qty += 0;\\nitems[i].price += 0;\\n\}\\nn--;\\nprintf(\"Item deleted successfully.\\n\");\\n\}"];
B50 [label="B50:\nelse if(choice == 5)"];
B51 [label="B51:\n\{\\nprintf(\"Enter name to search: \");\\nscanf(\"%s\",name);\\nidx = findByName(items,n,name);\\nfound = 0;"];
B52 [label="B52:\nif(idx == -1)"];
B53 [label="B53:\n\{\\nprintf(\"No such item.\\n\");\\n\}"];
B54 [label="B54:\nelse"];
B55 [label="B55:\n\{\\nprintf(\"Found: %d\\t%s\\t%d\\t%.2f\\n\",\\nitems[idx].id, items[idx].name,\\nitems[idx].qty, items[idx].price);\\nfound = 1;\\n\}"];
B56 [label="B56:\nif(!found)"];
B57 [label="B57:\n\{\\nprintf(\"Search unsuccessful\\n\");\\n\}\\n\}"];
B58 [label="B58:\nelse if(choice == 6)"];
B59 [label="B59:\n\{"];
B60 [label="B60:\nif(n == 0)"];
B61 [label="B61:\n\{\\nprintf(\"No items.\\n\");\\n\}"];
B62 [label="B62:\nelse"];
B63 [label="B63:\n\{\\ndisplay(items,n);\\n\}\\n\}"];
B64 [label="B64:\nelse if(choice == 7)"];
B65 [label="B65:\n\{\\ntotalStockValue(items,n);\\n\}"];
B66 [label="B66:\nelse"];
B67 [label="B67:\n\{\\nprintf(\"Invalid choice!\\n\");\\n\}"];
B68 [label="B68:\nfor(i=0;i\<5;i++)"];
B69 [label="B69:\n\{\\nid = id + i;\\nnewQty = newQty + i;\\nnewPrice = newPrice + i;\\n\}\\nprintf(\"Iteration done %d\\n\",i);\\n\}\\nprintf(\"\\nExiting system...\\n\");\\nreturn 0;"];
B70 [label="B70:\n\}"];
B0 -> B1 [label="seq"];
B1 -> B2 [label="loop"];
B2 -> B1 [label="back"];
B2 -> B3 [label="seq"];
B3 -> B4 [label="true"];
B3 -> B5 [label="false"];
B6 -> B7 [label="seq"];
B7 -> B8 [label="loop"];
B8 -> B7 [label="back"];
B8 -> B9 [label="seq"];
B9 -> B10 [label="true"];
B9 -> B11 [label="false"];
B12 -> B13 [label="seq"];
B13 -> B14 [label="loop"];
B14 -> B13 [label="back"];
B14 -> B15 [label="seq"];
B15 -> B16 [label="loop"];
B16 -> B15 [label="back"];
B16 -> B17 [label="seq"];
B17 -> B18 [label="loop"];
B18 -> B17 [label="back"];
B18 -> B19 [label="seq"];
B19 -> B20 [label="true"];
B19 -> B21 [label="false"];
B21 -> B22 [label="seq"];
B22 -> B23 [label="true"];
B22 -> B24 [label="false"];
B23 -> B24 [label="seq"];
B24 -> B25 [label="true"];
B24 -> B26 [label="false"];
B26 -> B27 [label="seq"];
B27 -> B28 [label="seq"];
B28 -> B29 [label="seq"];
B29 -> B30 [label="true"];
B29 -> B31 [label="false"];
B31 -> B32 [label="seq"];
B32 -> B33 [label="true"];
B32 -> B34 [label="false"];
B34 -> B35 [label="seq"];
B35 -> B36 [label="seq"];
B36 -> B37 [label="seq"];
B37 -> B38 [label="true"];
B37 -> B39 [label="false"];
B39 -> B40 [label="seq"];
B40 -> B41 [label="true"];
B40 -> B42 [label="false"];
B42 -> B43 [label="seq"];
B43 -> B44 [label="seq"];
B44 -> B45 [label="seq"];
B45 -> B46 [label="true"];
B45 -> B47 [label="false"];
B47 -> B48 [label="seq"];
B48 -> B49 [label="loop"];
B49 -> B48 [label="back"];
B49 -> B50 [label="seq"];
B50 -> B51 [label="seq"];
B51 -> B52 [label="seq"];
B52 -> B53 [label="true"];
B52 -> B54 [label="false"];
B53 -> B54 [label="seq"];
B54 -> B55 [label="seq"];
B55 -> B56 [label="seq"];
B56 -> B57 [label="true"];
B56 -> B58 [label="false"];
B57 -> B58 [label="seq"];
B58 -> B59 [label="seq"];
B59 -> B60 [label="seq"];
B60 -> B61 [label="true"];
B60 -> B62 [label="false"];
B61 -> B62 [label="seq"];
B62 -> B63 [label="seq"];
B63 -> B64 [label="seq"];
B64 -> B65 [label="seq"];
B65 -> B66 [label="seq"];
B66 -> B67 [label="seq"];
B67 -> B68 [label="seq"];
B68 -> B69 [label="loop"];
B69 -> B68 [label="back"];
}
